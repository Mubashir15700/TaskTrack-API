{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"MongoDB disconnected"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"Error connecting to the database: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"MongoDB connection error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"MongoDB disconnected"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"Error connecting to the database: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"MongoDB connection error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"MongoDB disconnected"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"Error connecting to the database: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"MongoDB connection error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"MongoDB disconnected"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"Error connecting to the database: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"MongoDB connection error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"MongoDB disconnected"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"Error connecting to the database: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"MongoDB connection error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"MongoDB disconnected"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"Error connecting to the database: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"MongoDB connection error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"level":"error","message":"Internal error:  Operation `laborers.aggregate()` buffering timed out after 10000ms","stack":"MongooseError: Operation `laborers.aggregate()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Brocamp Second Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)"}
{"level":"error","message":"Internal error:  Operation `banners.find()` buffering timed out after 10000ms","stack":"MongooseError: Operation `banners.find()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Brocamp Second Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)"}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"Database connection closed successfully."}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"Database connection closed successfully."}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"Database connection closed successfully."}
{"level":"error","message":"Internal error:  Operation `laborers.aggregate()` buffering timed out after 10000ms","stack":"MongooseError: Operation `laborers.aggregate()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Brocamp Second Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)"}
{"level":"error","message":"Internal error:  Operation `banners.find()` buffering timed out after 10000ms","stack":"MongooseError: Operation `banners.find()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Brocamp Second Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)"}
{"level":"error","message":"Internal error:  Operation `laborers.aggregate()` buffering timed out after 10000ms","stack":"MongooseError: Operation `laborers.aggregate()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Brocamp Second Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)"}
{"level":"error","message":"Internal error:  Operation `banners.find()` buffering timed out after 10000ms","stack":"MongooseError: Operation `banners.find()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Brocamp Second Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)"}
{"level":"info","message":"Server shut down gracefully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"MongoDB disconnected"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"Error connecting to the database: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"MongoDB connection error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"MongoDB disconnected"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"MongoDB disconnected"}
{"level":"error","message":"Error checking user status:"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Connected to MongoDB"}
{"cause":{"code":"UND_ERR_CONNECT_TIMEOUT","message":"Connect Timeout Error","name":"ConnectTimeoutError"},"level":"error","message":"Internal error:  fetch failed","stack":"TypeError: fetch failed\n    at Object.fetch (node:internal/deps/undici/undici:11731:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async ProfileService.getCurrentLocation (/home/mubashir/Brocamp Second Project/server/src/services/user/profile.js:54:26)\n    at async ProfileController.getCurrentLocation (/home/mubashir/Brocamp Second Project/server/src/controllers/user/profile.js:26:24)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"MongoDB disconnected"}
{"level":"error","message":"Error checking user status:"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"MongoDB disconnected"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"Error connecting to the database: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"MongoDB connection error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"MongoDB disconnected"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"Error connecting to the database: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"code":"ESERVFAIL","hostname":"_mongodb._tcp.cluster0.wthuy8v.mongodb.net","level":"error","message":"MongoDB connection error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net","stack":"Error: querySrv ESERVFAIL _mongodb._tcp.cluster0.wthuy8v.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","syscall":"querySrv"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"Database connection closed successfully."}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"Database connection closed successfully."}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"Database connection closed successfully."}
{"level":"info","message":"Server shut down gracefully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Internal error:  Cannot read properties of undefined (reading 'status')","stack":"TypeError: Cannot read properties of undefined (reading 'status')\n    at AuthController.loginWithGoogle (/home/mubashir/Brocamp Second Project/server/src/controllers/auth.js:39:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Internal error:  Cannot read properties of undefined (reading 'status')","stack":"TypeError: Cannot read properties of undefined (reading 'status')\n    at AuthController.loginWithGoogle (/home/mubashir/Brocamp Second Project/server/src/controllers/auth.js:39:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Internal error:  Cannot read properties of undefined (reading 'status')","stack":"TypeError: Cannot read properties of undefined (reading 'status')\n    at AuthController.loginWithGoogle (/home/mubashir/Brocamp Second Project/server/src/controllers/auth.js:39:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Internal error:  Stripe: Argument \"session\" must be a string, but got: undefined (on API request to `GET /v1/checkout/sessions/{session}`)","stack":"Error: Stripe: Argument \"session\" must be a string, but got: undefined (on API request to `GET /v1/checkout/sessions/{session}`)\n    at /home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeResource.js:100:23\n    at Array.reduce (<anonymous>)\n    at Constructor._getRequestOpts (/home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeResource.js:97:35)\n    at /home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeResource.js:145:29\n    at new Promise (<anonymous>)\n    at Constructor._makeRequest (/home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeResource.js:141:16)\n    at Constructor.retrieve (/home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeMethod.js:31:83)\n    at SubscriptionService.saveSubscriptionResult (/home/mubashir/Brocamp Second Project/server/src/services/user/subscription.js:108:56)\n    at SubscriptionController.saveSubscriptionResult (/home/mubashir/Brocamp Second Project/server/src/controllers/user/subscription.js:21:55)\n    at /home/mubashir/Brocamp Second Project/server/src/utils/errorHandling/catchAsync.js:5:9"}
{"level":"error","message":"Internal error:  Stripe: Argument \"session\" must be a string, but got: undefined (on API request to `GET /v1/checkout/sessions/{session}`)","stack":"Error: Stripe: Argument \"session\" must be a string, but got: undefined (on API request to `GET /v1/checkout/sessions/{session}`)\n    at /home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeResource.js:100:23\n    at Array.reduce (<anonymous>)\n    at Constructor._getRequestOpts (/home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeResource.js:97:35)\n    at /home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeResource.js:145:29\n    at new Promise (<anonymous>)\n    at Constructor._makeRequest (/home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeResource.js:141:16)\n    at Constructor.retrieve (/home/mubashir/Brocamp Second Project/server/node_modules/stripe/cjs/StripeMethod.js:31:83)\n    at SubscriptionService.saveSubscriptionResult (/home/mubashir/Brocamp Second Project/server/src/services/user/subscription.js:108:56)\n    at SubscriptionController.saveSubscriptionResult (/home/mubashir/Brocamp Second Project/server/src/controllers/user/subscription.js:21:55)\n    at /home/mubashir/Brocamp Second Project/server/src/utils/errorHandling/catchAsync.js:5:9"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"MongoDB disconnected"}
{"level":"error","message":"Internal error:  Server selection timed out after 30000 ms","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":30,"maxElectionId":"7fffffff0000000000000017","maxSetVersion":2,"servers":{},"setName":"atlas-jcjbqb-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"stack":"MongoServerSelectionError: Server selection timed out after 30000 ms\n    at EventTarget.<anonymous> (/home/mubashir/Brocamp Second Project/server/node_modules/mongodb/lib/sdam/topology.js:276:34)\n    at [nodejs.internal.kHybridDispatch] (node:internal/event_target:826:20)\n    at EventTarget.dispatchEvent (node:internal/event_target:761:26)\n    at abortSignal (node:internal/abort_controller:371:10)\n    at TimeoutController.abort (node:internal/abort_controller:393:5)\n    at Timeout.<anonymous> (/home/mubashir/Brocamp Second Project/server/node_modules/mongodb/lib/utils.js:1010:92)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"error","message":"Error checking user status:"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error checking user status:"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:21:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:21:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:21:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:10:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:21:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:10:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error connecting to the database: log is not defined","stack":"ReferenceError: log is not defined\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:7:9)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/app.js:91:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Module.require (node:internal/modules/cjs/loader:1235:19)\n    at require (node:internal/modules/helpers:176:18)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/server.js:1:13)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:22:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:22:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to Database"}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to database"}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"error","message":"Error connecting to the database: log is not defined","stack":"ReferenceError: log is not defined\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:8:9)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/app.js:91:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Module.require (node:internal/modules/cjs/loader:1235:19)\n    at require (node:internal/modules/helpers:176:18)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/server.js:1:13)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:29:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:29:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:8:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:10:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:10:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"error","message":"Error connecting to the database: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:10:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"MongoDB connection error: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at NativeConnection.createClient (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:206:11)\n    at NativeConnection.openUri (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/connection.js:759:34)\n    at Mongoose.connect (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/mongoose.js:403:15)\n    at DBConnection (/home/mubashir/Tutorials/Brocamp-Second-Project/server/src/config/db.js:28:24)\n    at Object.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/seeds/adminSeed.js:10:1)\n    at Module._compile (node:internal/modules/cjs/loader:1376:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)"}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Admin already exists. Skipping seed."}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Server running on port 3000"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Server shutting down..."}
{"level":"info","message":"MongoDB disconnected"}
{"level":"error","message":"Error seeding admin: Operation `admins.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/home/mubashir/Tutorials/Brocamp-Second-Project/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:186:23)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"MongoDB disconnected"}
{"level":"info","message":"Connected to the database successfully."}
{"level":"info","message":"Admin already exists. Skipping seed."}
{"level":"info","message":"MongoDB disconnected"}
